#!/bin/bash

# Script para validar sintaxis IF-THEN en todos los documentos

echo "üîç VALIDANDO SINTAXIS IF-THEN"
echo "=============================="

# Contadores
TOTAL_IF_STATEMENTS=0
VALID_IF_STATEMENTS=0
INVALID_IF_STATEMENTS=0
FILES_WITH_IF=0
TOTAL_FILES=0

# Funci√≥n para reportar problema
report_issue() {
    local file="$1"
    local issue="$2" 
    local line_num="$3"
    local line_content="$4"
    echo "‚ùå $file:$line_num"
    echo "   Problema: $issue"
    echo "   L√≠nea: $line_content"
    echo ""
    ((INVALID_IF_STATEMENTS++))
}

# Funci√≥n para validar sintaxis IF-THEN
validate_if_then() {
    local file="$1"
    local has_if_statements=false
    
    while IFS= read -r -u 3 line_content; do
        local line_num=$((line_num + 1))
        
        # Buscar l√≠neas que empiecen con **IF
        if [[ "$line_content" =~ ^\*\*IF ]]; then
            ((TOTAL_IF_STATEMENTS++))
            has_if_statements=true
            
            # Validar estructura completa: **IF [condici√≥n]** ‚Üí READ [link](path#anchor)
            if [[ "$line_content" =~ ^\*\*IF\ [^*]+\*\*\ ‚Üí\ READ\ \[.*\]\(.*#.*\) ]]; then
                ((VALID_IF_STATEMENTS++))
                echo "‚úÖ $file:$line_num - Sintaxis IF-THEN v√°lida"
            else
                # Verificar patrones comunes de error
                if [[ "$line_content" =~ ^\*\*IF.*\*\*.*‚Üí ]]; then
                    if [[ ! "$line_content" =~ READ ]]; then
                        report_issue "$file" "Falta 'READ' despu√©s de ‚Üí" "$line_num" "$line_content"
                    elif [[ ! "$line_content" =~ \[.*\]\(.*#.*\) ]]; then
                        report_issue "$file" "Enlace sin anchor espec√≠fico (#section)" "$line_num" "$line_content"
                    else
                        report_issue "$file" "Sintaxis IF-THEN malformada" "$line_num" "$line_content"
                    fi
                else
                    report_issue "$file" "Estructura IF-THEN incorrecta" "$line_num" "$line_content"
                fi
            fi
        fi
    done 3< "$file"
    
    if [[ "$has_if_statements" == true ]]; then
        ((FILES_WITH_IF++))
    fi
}

echo "üîç Analizando archivos markdown..."
echo ""

# Procesar todos los archivos markdown del sistema
while IFS= read -r -d '' file; do
    ((TOTAL_FILES++))
    line_num=0
    validate_if_then "$file"
done < <(find ./system -name "*.md" -type f -print0)

# Procesar tambi√©n comandos y CLAUDE.local.md
for file in ./commands/*.md ./CLAUDE.local.md; do
    if [[ -f "$file" ]]; then
        ((TOTAL_FILES++))
        line_num=0
        validate_if_then "$file"
    fi
done

echo ""
echo "üìä RESUMEN DE VALIDACI√ìN IF-THEN"
echo "================================="
echo "Archivos analizados: $TOTAL_FILES"
echo "Archivos con IF statements: $FILES_WITH_IF"
echo "Total IF statements encontrados: $TOTAL_IF_STATEMENTS"
echo "IF statements v√°lidos: $VALID_IF_STATEMENTS"
echo "IF statements inv√°lidos: $INVALID_IF_STATEMENTS"

if [ $INVALID_IF_STATEMENTS -eq 0 ] && [ $TOTAL_IF_STATEMENTS -gt 0 ]; then
    echo ""
    echo "‚úÖ TODA LA SINTAXIS IF-THEN ES V√ÅLIDA"
    echo "====================================="
elif [ $TOTAL_IF_STATEMENTS -eq 0 ]; then
    echo ""
    echo "‚ö†Ô∏è  NO SE ENCONTRARON IF STATEMENTS"
    echo "=================================="
else
    echo ""
    echo "‚ö†Ô∏è  SE REQUIEREN CORRECCIONES DE SINTAXIS"
    echo "========================================="
fi

echo ""
echo "üéØ PATR√ìN V√ÅLIDO:"
echo "**IF [condici√≥n espec√≠fica]** ‚Üí READ [descripci√≥n](archivo.md#secci√≥n-espec√≠fica)"