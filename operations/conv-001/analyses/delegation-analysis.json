{
  "analysis_metadata": {
    "agent_type": "delegation-advisor",
    "analysis_timestamp": "2025-08-19T12:04:00Z",
    "task_id": "multi-analysis-delegation-guidance",
    "confidence_score": 0.94,
    "analysis_scope": "command-routing-and-agent-selection",
    "coverage_percentage": 0.92
  },
  "task_decomposition": {
    "primary_task": "execute-parallel-intent-analysis-command",
    "task_complexity": "high",
    "coordination_requirements": "advanced",
    "atomic_components": [
      "agent-deployment-coordination",
      "parallel-analysis-execution",
      "result-synthesis-orchestration",
      "output-generation-management",
      "validation-protocol-enforcement"
    ]
  },
  "agent_matching_analysis": {
    "required_specializations": {
      "exploration_analyst": {
        "match_confidence": 0.95,
        "specialization_alignment": "perfect-fit-for-system-discovery",
        "availability_status": "confirmed-available",
        "capability_coverage": "comprehensive-exploration-analysis"
      },
      "ux_architect": {
        "match_confidence": 0.87,
        "specialization_alignment": "excellent-for-interface-requirements",
        "availability_status": "confirmed-available",
        "capability_coverage": "user-experience-and-accessibility-analysis"
      },
      "project_optimizer": {
        "match_confidence": 0.92,
        "specialization_alignment": "ideal-for-structure-optimization",
        "availability_status": "confirmed-available",
        "capability_coverage": "architectural-and-performance-analysis"
      },
      "system_auditor": {
        "match_confidence": 0.96,
        "specialization_alignment": "perfect-for-compliance-validation",
        "availability_status": "confirmed-available",
        "capability_coverage": "comprehensive-compliance-and-quality-analysis"
      },
      "delegation_advisor": {
        "match_confidence": 0.94,
        "specialization_alignment": "optimal-for-routing-recommendations",
        "availability_status": "self-executing",
        "capability_coverage": "delegation-strategy-and-routing-guidance"
      }
    }
  },
  "routing_instructions": {
    "execution_pattern": "parallel-deployment",
    "coordination_protocol": "synchronized-analysis-with-independent-execution",
    "sequencing_requirements": [
      "simultaneous-agent-deployment",
      "independent-analysis-execution",
      "coordinated-result-collection",
      "systematic-synthesis-generation"
    ],
    "resource_allocation": {
      "memory_requirements": "moderate-per-agent",
      "processing_time": "medium-duration-parallel-execution",
      "file_system_access": "shared-output-directory-with-exclusive-file-creation",
      "coordination_overhead": "minimal-with-structured-communication"
    }
  },
  "command_recommendations": {
    "primary_command": "/commands/orchestration/parallel-intent-analysis.md",
    "execution_rationale": "perfect-match-for-multi-perspective-analysis-requirements",
    "alternative_commands": [
      "/commands/composition/complete-analysis.md",
      "/commands/analysis/system-audit.md"
    ],
    "command_parameters": {
      "required": ["user-request-text"],
      "optional": ["output-format-preferences", "analysis-depth-configuration"],
      "validation": ["agent-availability-verification", "output-directory-accessibility"]
    }
  },
  "delegation_strategy": {
    "orchestration_approach": "central-coordinator-with-distributed-execution",
    "communication_pattern": "request-broadcast-with-result-aggregation",
    "error_handling": "graceful-degradation-with-partial-results",
    "quality_assurance": "multi-gate-validation-with-synthesis-verification",
    "performance_optimization": {
      "parallel_execution": "maximum-concurrency-within-resource-limits",
      "result_caching": "analysis-reuse-for-similar-requests",
      "load_balancing": "agent-availability-aware-distribution",
      "resource_pooling": "shared-infrastructure-with-isolation"
    }
  },
  "success_criteria": {
    "execution_success": [
      "all-five-agents-deployed-successfully",
      "comprehensive-analysis-from-each-perspective",
      "structured-json-output-generation",
      "orchestrator-compatible-result-format"
    ],
    "quality_success": [
      "analysis-consistency-across-agents",
      "recommendation-actionability-validation",
      "framework-compliance-verification",
      "synthesis-completeness-confirmation"
    ],
    "performance_success": [
      "parallel-execution-efficiency",
      "reasonable-processing-time",
      "resource-utilization-optimization",
      "scalable-coordination-overhead"
    ]
  },
  "risk_mitigation": {
    "agent_failure_scenarios": {
      "single_agent_failure": "continue-with-remaining-agents-and-note-limitation",
      "multiple_agent_failures": "assess-minimum-viable-analysis-coverage",
      "coordination_failure": "implement-fallback-to-sequential-execution",
      "synthesis_failure": "provide-individual-agent-results-with-manual-synthesis-guidance"
    },
    "resource_constraints": {
      "memory_limitations": "implement-progressive-loading-and-result-streaming",
      "processing_limitations": "add-timeout-handling-and-partial-result-collection",
      "file_system_limitations": "implement-cleanup-protocols-and-space-management",
      "coordination_bottlenecks": "optimize-communication-protocols-and-reduce-overhead"
    }
  },
  "implementation_guidance": {
    "pre_execution_steps": [
      "verify-agent-availability-in-catalog",
      "confirm-output-directory-accessibility",
      "validate-user-request-clarity",
      "establish-success-criteria-baselines"
    ],
    "execution_monitoring": [
      "track-agent-deployment-progress",
      "monitor-analysis-completion-status",
      "validate-output-generation-quality",
      "ensure-synthesis-protocol-compliance"
    ],
    "post_execution_validation": [
      "verify-all-required-outputs-generated",
      "validate-json-schema-compliance",
      "confirm-orchestrator-compatibility",
      "assess-recommendation-actionability"
    ]
  },
  "recommendations": {
    "immediate_actions": [
      "execute-parallel-intent-analysis-command",
      "monitor-agent-deployment-success",
      "validate-output-generation-quality"
    ],
    "optimization_opportunities": [
      "implement-intelligent-agent-selection",
      "add-dynamic-load-balancing",
      "create-adaptive-coordination-protocols"
    ],
    "strategic_improvements": [
      "develop-machine-learning-enhanced-routing",
      "implement-predictive-resource-allocation",
      "create-self-optimizing-delegation-algorithms"
    ],
    "delegation_patterns": [
      "establish-reusable-multi-agent-coordination-templates",
      "create-standardized-parallel-execution-protocols",
      "develop-systematic-synthesis-methodologies"
    ]
  }
}